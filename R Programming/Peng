# History of R
# R is a dialect of S.
# S was initiated in 1976.
/S Philosophy
# 'Outgrow'
# Features of R.
# Syntax similar to R 
# Semantic of R is similar to S.

# 4000 packages.
# htt://bioconductor.org

#http://cran.r-project.org
An introduction to R'
Writing R Extensions
R Data Inport/Export
http://www.r-project.org/doc/bib/R-books.html
#

Getting Help.
library(datasets)
data(airquality)
cor(airquality)

Error found Cut and paste error message in google.

# Reading Data into R.

mydata <- read.csv("~/downloads/hw1_data.csv",header=TRUE,sep=",")

# R Data Types:Attributes and Objects
Charcter numeric,complex, integer,Logical.

List can contain element of different classes.

Data Types:Vectors and Lists
x <- c(2,3)
Mixing Objects.
y <- c(2,TRUE)

Explicit Coercion
x <- 0:6
as.numeric(x)


Matrices 
Matrices are vectors with a dimension attribute. The dimension attribute is itself an integer vector of lenght 2(nrow, ncol)

m <- matrix(nrow=2, ncol=3)
m <- matrix(1:6, nrow= 2, ncol =3)

m <- 1:10
dim(m) <- c(2,5)

# Cbing-ing and Rbind-ing
x <- 1:3
y <- 10:12
cbind(x,y)

rbind(x,y)

# Data Types:Factor
A Factor as an integer when each integer has a label.
X <- factor(c("yes","yes","no","yes","no")
table(x)
unclass(x)
attr(,levels)

# Data Types: Missing Values.

is.na()
is.nan()

# Data Types: Data Frame 

x <- data.frame(foo=1:4, bar =c(T,T,F,F))

#Data Types:Name Attributes 
X <- 1:3
names(X) <- c("foo","bar","not")

m <- matrix(1:4, nrow=2, ncol=2)
dimnames <- list(c("a","b"), c("c", "d"))

# Reading Tabular Data.

read.table
read.csv
readLines for reading line of a text file


# Subsetting Basics 
x <- c("a", "b", "c", "c", "d", "a")
x[X > "a"]


# Subsetting Lists
mydata$Ozone 

x <- list(foo =1:4, bar=0.6, baz="hello")
x[c(1,3)]

Subsetting Nested Elements of a List.
x <- list (a=list(10,12,14), b=c(3.14, 2.81))

x[[c(1,3)]]

x[[1]][[3]]

x[[c(2,1)]]


Subsetting a Matrix 
Matrices can be subsetted in the usual ways with(i,j) type indices 

x <- matrix(1:6, 2,3)
x[1,2]
x[2,]

# Subsetting Partial Matching 
x <- list(aardvark, =1:5)
x$a
x[["a", exact=FALSE]]

Subsetting: Removing missing values NA, NAN.
x <- c(1,2,NA,4,NA,5)
bad <- is.na(x)
x(!bad)

# Ozone Datasets
airquality[1:6,]
good <- complete.cases(airquality)
airquality[good,  ][1:6, ]
4
